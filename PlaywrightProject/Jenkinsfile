pipeline {
    agent any

    tools {
        maven 'Maven'
        jdk 'JAVA_HOME'
    }
    parameters {
        string(name: 'Branch_Name', defaultValue: 'main', description: 'Git Branch to be built')
    }

    environment {
       SONARQUBE_ENV = 'LocalSonar'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.Branch_Name}",
                    url: 'https://github.com/venkiralami/playwright_project_ven.git',
                    credentialsId: 'GitHubCredsId'
            }
        }

        stage('Build & Test') {
            steps {
                dir('PlaywrightProject') {
                    sh 'mvn clean install'
                }
            }
        }

      
	stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
					dir('PlaywrightProject') {
						sh '''
    					mvn jacoco:report sonar:sonar \
   						 -Dsonar.projectKey=PlaywrightProject \
   						 -Dsonar.host.url=http://localhost:9000 \
   						 -Dsonar.login=sqa_e9f060a5bab7ae0dae124a41ee67171135152253 \
  					 	 -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
'''                 }
                }
            }
        }
/*
        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        */
	}
 }  
